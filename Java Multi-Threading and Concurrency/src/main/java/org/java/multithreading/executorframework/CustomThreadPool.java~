package org.java.multithreading.executorframework;


import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class CustomThreadPool {
	public static void main(String[] args) {
		ThreadPoolExecutor executor = new ThreadPoolExecutor(
				2, // corePoolSize
				0, // maximumPoolSize
				60, // keepAliveTime
				TimeUnit.SECONDS,
				new LinkedBlockingQueue<Runnable>()
		);

		for (int i = 0; i < 10; i++) {
			executor.execute(new Task(i));
		}

		executor.shutdown();
	}
}

class Task implements Runnable {
	private final int taskId;

	Task(int id) {
		this.taskId = id;
	}

	public void run() {
		System.out.println("Executing Task " + taskId + " by " + Thread.currentThread().getName());
		// Task implementation
	}
}